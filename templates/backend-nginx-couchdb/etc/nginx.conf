#-  Nginx configuration file

#-  nginx.conf ~~
#                                                       ~~ (c) SRW, 03 May 2012

error_log /var/log/nginx/error.log notice;

events {

    worker_connections 256;

}

http {

    default_type application/octet-stream;

    gzip on;

    keepalive_timeout 65;

    sendfile on;

    upstream couchdb {
        server 127.0.0.1:5984;
    }

    server {

        listen 80 default_server;
        server_name qmachine.org localhost;

        access_log /var/log/nginx/qmachine.access.log;

        rewrite_log on;

        if ($request_method !~ ^(GET|OPTIONS|POST)$ ) {
            return 444;
        }

        add_header 'Access-Control-Allow-Origin' '*';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept';

        add_header 'Access-Control-Max-Age' '10'; # seconds

        if ($request_method = 'OPTIONS') {
            #add_header 'Content-Length' '0';
            return 204;
        }

        set $qbit_b 0;
        set $qbit_g 0;
        set $qbit_k 0;
        set $qbit_p 0;
        set $qbit_s 0;

        if ($uri ~ ^/box/([^\&\/]+)$) {
          # See: http://wiki.nginx.org/HttpCoreModule
            set $q_box $1;
            set $qbit_b 1;
        }

        if ($request_method = 'GET') {
            set $qbit_g 1;
        }

        if ($args ~ ^key=([^\&]+)$) {
            set $q_key $1;
            set $qbit_k 1;
        }

        if ($request_method = 'POST') {
            set $qbit_p 1;
        }

        if ($args ~ ^status=([^\&]+)$) {
            set $q_status $1;
            set $qbit_s 1;
        }

        set $qbit_mask "${qbit_b}${qbit_g}${qbit_k}${qbit_p}${qbit_s}";

        if ($qbit_mask = 11100) {
          # GET from box by key
            rewrite ^ /db/_design/app/_show/data/$q_box&$q_key? break;
        }

        if ($qbit_mask = 10110) {
          # POST to box by key
            rewrite ^ /db/_design/app/_update/timestamp/$q_box&$q_key? break;
        }

        if ($qbit_mask = 11001) {
          # GET from box by status
            rewrite ^ /db/_design/app/_list/as-array/jobs?key=[%22$q_box%22,%22$q_status%22]? break;
        }

        if ($qbit_mask ~ ^01) {
          # GET static content ...
            rewrite /(.*) /www/_design/app/_rewrite/$1 break;
        }

      # if we fall through this far, it needs to be denied as 444 ... ?

        #add_header 'Access-Control-Allow-Origin' '*';

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
            proxy_pass http://couchdb/;
        }

        location ~ /box/([^\&\/]+)$ {
            proxy_pass http://couchdb;
        }

        #proxy_redirect off;

      # This one isn't given on http://goo.gl/ruyY ...
        #proxy_set_header X-Real-IP $remote_addr;

    }

}

pid /var/run/nginx.pid;

worker_processes 4;

#worker_cpu_affinity 1000 0100 0010 0001;

#-  vim:set syntax=nginx:
